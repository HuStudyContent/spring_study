<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--bean = 对象--><!--id = 变量名--><!--class = new的对象--><!--property 相当于给对象中的属性设值-->
    <!--   使用spring 来创建对象， 在spring 这些都称为Bean-->
<!--   注册bean-->
    <bean id="userService" class="com.kuang.service.UserServiceImpl"/>
    <bean id="log" class="com.kuang.log.Log"/>
    <bean id="afterLog" class="com.kuang.log.AfterLog"/>

<!--    方式三： 使用注解实现AOP-->
    <bean id="annotationPoint" class="com.kuang.diy.AnnotationPoint"/>
<!--开启注解支持-->
    <aop:aspectj-autoproxy/>


<!--方式一：使用原生的Spring API接口-->
<!--    配置aop： 需要导入aop的约束-->
<!--    <aop:config>-->
<!--&lt;!&ndash;    切入点： expression: 表达式； execution（要执行的位置！ *****）&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.kuang.service.UserServiceImpl.*(..))"/>-->

<!--&lt;!&ndash;        执行环绕增加: 下面两行表示把这两个方法切入到我们的切入点&ndash;&gt;-->
<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->



<!--    方式二： 自定义类-->
<!--    <bean id="diy" class="com.kuang.diy.DiyPoint"/>-->

<!--    <aop:config>-->
<!--&lt;!&ndash;        自定义切面， ref 要引用的切面&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--&lt;!&ndash;            切入点&ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution(* com.kuang.service.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;            通知&ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:after method="after" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

</beans>