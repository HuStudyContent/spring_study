<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">


<!--    无参构造-->
<!--    <bean id="user" class="com.kuang.pojo.User">-->
<!--        <property name="name" value="胡学军"/>-->
<!--    </bean>-->

<!--    有参构造的第一种 下标赋值-->
<!--    <bean id="user" class="com.kuang.pojo.User">-->
<!--        <constructor-arg index="0" value="狂神java" />-->
<!--    </bean>-->


<!--    有参构造的第二种：通过类型创建; 但是不建议使用-->
<!--    <bean id="user" class="com.kuang.pojo.User">-->
<!--        <constructor-arg type="java.lang.String" value="huxuejun"/>-->
<!--    </bean>-->


<!--    第三种：直接通过参数名-->
    <bean id="user" class="com.kuang.pojo.User">
        <constructor-arg name="name" value="胡学军"/>
    </bean>

<!--    id: bean 唯一标识符，也就是相当于我们学校的对象名
        class: bean 对象所对应的权限定名： 包名 + 类型
        name: 也是别名；name比alias更高级， 可以取多个别名 name="user2 u2,u3;u4" 空格，分号，逗号都可以分割
-->
    <bean id="userT" class="com.kuang.pojo.UserT" name="user2 u2,u3;u4">
        <property name="hobbys" value="羽毛球"/>
    </bean>


<!--    别名， 如果添加了别名，我们也可以使用别名获取到这个对象  -->
    <alias name="user" alias="newUser"/>
</beans>